/*
 * $Id: cedarcreek_full.sim 2234 2012-04-24 14:54:08Z ascough $"
 *
 * This file is part of the USDA-ARS AgES model component collection.
 * It is derived from JAMS/J2K/J2KSN, FSU Jena, Germany.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 *
 */
sim(name:"cedarcreek_full") {

   def data = "$oms_prj/data/cedarcreek/full"
   def data_param = "$oms_prj/data/cedarcreek_full"

   // define output strategy: output base dir and
   // the strategy NUMBERED|SIMPLE|DATE
   outputstrategy(dir:"$oms_prj/output", scheme:SIMPLE)

   //  define model
   model(classname:"ages.AgES") {
    
   // parameter file and overwrites
   parameter (file:"${data_param}.csv") {
      // parameter files
         hruFile      "$data/hrus.csv"
         reachFile    "$data/reach.csv"
         routingFile  "$data/routing_mf.csv"
         luFile       "$data/landuse.csv"
         stFile       "$data/soils_hor.csv"
         gwFile       "$data/hgeo.csv"
         mgmtFile     "$data/management.csv"
         tillFile     "$data/till.csv"
         rotFile      "$data/croprotation.csv"
         fertFile     "$data/fert.csv"
         cropFile     "$data/crop.csv"
         hruRotFile   "$data/hrus_rot.csv"

         // climate files
         dataFileTmin   "$data/tmin.csv"
         dataFileTmax   "$data/tmax.csv"
         dataFileHum    "$data/rhum.csv"
         dataFileSol    "$data/solrad.csv"
         dataFilePrecip "$data/rain.csv"
         dataFileWind   "$data/wind.csv"
   
         humidity   "rel"      // "abs" or "rel" 
         solar      "srad"     // "sunh" or "srad"

         // catchment-weighted output files
         balFile        "balance.csv"
         outFile        "result.csv"
         outFile_n      "result_n.csv"
         outFile_pool   "result_n_pool.csv"
          
         // detailed HRU and reach output files
         // disable detailed output by providing "-" as name
         outFile_hru    "daily_hru.csv"
         outFile_reach  "daily_reach.csv"
         //outFile_hru    "-"
         //outFile_reach  "-"

         // summary state variables output (catchment-weighted output files)
         attrSet      "precip;tmean;rhum;wind;rain;snow;solRad;netRad;potET;actET;netRain;throughfall;interception;intercStorage;snowDepth;snowTotSWE;snowMelt;soilSatMPS;soilSatLPS;soilActMPS;soilActLPS;soilSat;percolation;actRG1;actRG2;outRD1;outRD2;outRG1;outRG2;catchmentRD1_w;catchmentRD2_w;catchmentRG1_w;catchmentRG2_w;channelStorage_w;catchmentSimRunoff;catchmentSimRunoffN;DeepsinkN;DeepsinkW;gensed;outsed;catchmentSed"
         attrSet_n    "catchmentRD1_w;catchmentRD2_w;catchmentRG1_w;catchmentRG2_w;catchmentNRG2_w;catchmentNRG1_w;catchmentNRD2_w;catchmentNRD1_w"
         attrSet_pool "sNO3_Pool;sNH4_Pool;sNResiduePool;BioNAct;sN_activ_pool;zrootd;BioAct;sN_stabel_pool;FPHUact;nstrs;wstrs;tstrs;nmin;NYield;BioYield;Addresidue_pooln;Addresidue_pool;cropid;gift"

         // summary state variables output (detailed HRU and reach output files)
         // all names have to be public HRU fields
         attrSet_hru    "ID;precip;tmean;rhum;wind;rain;snow;solRad;netRad;refET;potET;actET;netRain;netSnow;throughfall;interception;intercStorage;snowDepth;snowTotSWE;snowMelt;satMPS;satLPS;actMPS;actLPS;percolation;actRG1;actRG2;genRG1;genRG2;gensed;outsed;"
         attrSet_reach  "ID;simRunoff;outRD1;outRD2;outRG1;outRG2"

         // simulation time
         startTime      "2000-01-01"
         endTime        "2008-12-31"

         // lu management
         startReduction "1995-01-01"
         endReduction   "2000-12-31"
      }

      logging {
         //  "StandardEntityReader" "INFO"
         //  "StationReader" "INFO"
         //  "AreaAggregator" "INFO"
         //  "RainCorrectionRichter" "INFO"
         //  "J2KSNDormancy"  "INFO"
      }
   }

   analysis(title:"cedarcreek_full") {

      def f = "%last/result.csv"    // output file for all
      def fn = "%last/result_n.csv"    
      def fnp = "%last/result_n_pool.csv"

      timeseries(title:"Runoff") {
         x(file:f, column:"time")
         y(file:f, column:"catchmentSimRunoff")
      }
     
      timeseries(title:"Precip", view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"rain")
         y(file:f, column:"netRain")
         y(file:f, column:"snow")
      }
     
      timeseries(title:"Snow") {
         x(file:f, column:"time")
         y(file:f, column:"snowTotSWE")
         y(file:f, column:"snowMelt")
         y(file:f, column:"snowDepth")
      }
     
      timeseries(title:"ET", view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"potET")
         y(file:f, column:"actET")
         y(file:f, column:"rhum")
      }
     
      timeseries(title:"Interception") {
         x(file:f, column:"time")
         y(file:f, column:"interception")
         y(file:f, column:"throughfall")
         y(file:f, column:"intercStorage")
      }
     
      timeseries(title:"Rad", view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"solRad")
         y(file:f, column:"netRad")
      }
     
      timeseries(title:"Soil" , view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"soilSatMPS")
         y(file:f, column:"soilSatLPS")
         y(file:f, column:"soilActMPS")
         y(file:f, column:"soilActLPS")
 	 y(file:f, column:"soilSat")
      }
     
      timeseries(title:"RD/RG", view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"catchmentRD1_w")
         y(file:f, column:"catchmentRD2_w")
         y(file:f, column:"catchmentRG1_w")
         y(file:f, column:"catchmentRG2_w")
         y(file:f, column:"percolation")
      }
     
      timeseries(title:"act RD/RG", view:STACKED) {
         x(file:f, column:"time")
         y(file:f, column:"actRG1")
         y(file:f, column:"actRG2")
      }
          
      timeseries(title:"N Pools" , view:STACKED) {
         x(file:fnp, column:"time")
         y(file:fnp, column:"sNO3_Pool")
         y(file:fnp, column:"sNH4_Pool")
         y(file:fnp, column:"sNResiduePool")
      }

      timeseries(title:"Biomass" , view:STACKED) {
         x(file:fnp, column:"time")
         y(file:fnp, column:"BioAct")
         y(file:fnp, column:"BioNAct")
         y(file:fnp, column:"FPHUact")
      }
     
      timeseries(title:"Stress" , view:STACKED) {
          x(file:fnp, column:"time")
          y(file:fnp, column:"nstrs")
          y(file:fnp, column:"wstrs")
          y(file:fnp, column:"tstrs")
      }
     
      timeseries(title:"Sediment" , view:STACKED) {
          x(file:f, column:"time")
	  y(file:f, column:"gensed")
	  y(file:f, column:"outsed")
          y(file:f, column:"catchmentSed")
	  y(file:f, column:"rain")
      }

   }
}
