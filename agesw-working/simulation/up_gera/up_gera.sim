/*
 * $Id: arti-catch.sim 1159 2013-06-19 19:54:08Z kipka $"
 *
 * This file is part of the USDA-ARS AgES model component collection.
 * It is derived from JAMS/J2K/J2KSN, FSU Jena, Germany.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 *
 */
import static oms3.SimBuilder.instance as OMS3
OMS3.sim(name:"up_gera") {

    def data = "$oms_prj/data/up_gera"

    // define output strategy: output base dir and
    // the strategy NUMBERED|SIMPLE|DATE
    outputstrategy(dir:"$oms_prj/output", scheme:SIMPLE)

    //  define model
    model(classname:"ages.AgES") {

        // generic parameter
        parameter (file:"${data}.csv") 

        // EntityReader
        parameter (file:"${data}/hrus.csv") 
        parameter (file:"${data}/reach.csv") 
        parameter (file:"${data}/landuse.csv") 
        parameter (file:"${data}/hgeo.csv") 

        // ManagementParameterReader
        parameter (file:"${data}/fert.csv") 
        parameter (file:"${data}/till.csv") 
        parameter (file:"${data}/crop.csv") 
        parameter (file:"${data}/management.csv") 

        // SoilsParameterReader
        parameter (file:"${data}/soils_hor.csv") 

        // parameter file and overwrites..
        parameter {

            params    RAWPARAM

            rotFile     "$data/croprotation.csv"
            hruRotFile  "$data/hrus_rot.csv"
            routingFile "$data/routing.csv"    // MultiFlowReader

            // climate
            dataFileTmin   "$data/tmin.csv"
            dataFileTmax   "$data/tmax.csv"
            dataFileHum    "$data/rhum.csv"
            dataFileSol    "$data/sunh.csv"
            dataFilePrecip "$data/precip.csv"
            dataFileWind   "$data/wind.csv"

            humidity   "rel"      // "abs" or "rel" 
            solar      "sunh"     // "sunh" or "srad"

            outFile_hru    "HRU.csv"
            attrSet_hru    "ID;precip;tmean;rhum;wind;rain;snow;solRad;netRad;refET;potET;actET;netRain;netSnow;throughfall;interception;intercStorage;snowDepth;snowTotSWE;snowMelt;satMPS;satLPS;actMPS;actLPS;percolation;actRG1;actRG2;genRG1;genRG2;rs;ra;gensed;outsed;"
            attrSet_hru_w  "rain;snow;refET;potET;actET;netRain;netSnow;throughfall;intercStorage;snowTotSWE;snowMelt;satMPS;satLPS;actMPS;actLPS;actRG1;actRG2;genRG1;genRG2;rs;ra;gensed;outsed"
                      
            outFile_reach  "Reach.csv"
            attrSet_reach  "ID;simRunoff;outRD1;outRD2;outRG1;outRG2;"
            attrSet_reach_w  "-"

            outFile_bal    "HRU_Water_Mass_Balance.csv"
            attrSet_bal    "ID;balance;balancein;balanceMPSstart;balanceMPSend;balanceLPSstart;balanceLPSend;balanceDPSstart;balanceDPSend;balanceOut;"
            attrSet_bal_w  "balance;balancein;balanceMPSstart;balanceMPSend;balanceLPSstart;balanceLPSend;balanceDPSstart;balanceDPSend;balanceOut"

            outFile_n_bal    "HRU_Nitrogen_Mass_Balance.csv"
            attrSet_n_bal    "ID;sum_Ninput;SurfaceN;InterflowN;PercoN;Denit_trans;Volati_trans;actnup"
            attrSet_n_bal_w  "-"

            outFile_n_pool    "HRU_Nitrogen_Pool.csv"
            attrSet_n_pool    "ID;sNO3_Pool;sNH4_Pool;sNResiduePool;BioNAct;sN_activ_pool"
            attrSet_n_pool_w  "-"

            outFile_crop    "HRU_Crop_Growth.csv"
            attrSet_crop    "ID;zrootd;BioAct;sN_stabel_pool;FPHUact;nstrs;wstrs;tstrs;nmin;NYield;BioYield;Addresidue_pooln;Addresidue_pool;cropid;gift"
            attrSet_crop_w  "-"

            outFile        "Catchment_HRU.csv"
            attrSet        "precip;tmean;rhum;wind;rain;snow;solRad;netRad;potET;actET;netRain;throughfall;interception;intercStorage;snowDepth;snowTotSWE;snowMelt;soilSatMPS;soilSatLPS;soilActMPS;soilActLPS;soilSat;percolation;actRG1;actRG2;outRD1;outRD2;outRG1;outRG2;catchmentRD1_w;catchmentRD2_w;catchmentRG1_w;catchmentRG2_w;channelStorage_w;catchmentSimRunoff;catchmentSimRunoffN;DeepsinkN;DeepsinkW;gensed;outsed;catchmentSed;"
           
            outFile_n      "Catchment_Reach.csv"
            attrSet_n      "catchmentRD1_w;catchmentRD2_w;catchmentRG1_w;catchmentRG2_w;catchmentNRG2_w;catchmentNRG1_w;catchmentNRD2_w;catchmentNRD1_w;"
            

            outFile_c_WMB   "Catchment_Water_Mass_Balance.csv"
            attrSet_c_WMB   "precip;actET;intercStorage;snowTotSWE;soilActMPS;soilActLPS;actRG1;actRG2;channelStorage_w;catchmentRD1_w;catchmentRD2_w;catchmentRG1_w;catchmentRG2_w"    

            outFile_c_NMB   "Catchment_Nitrogen_Mass_Balance.csv"
            attrSet_c_NMB   "sum_Ninput;SurfaceN;sinterflowN;PercoN;Denit_trans;Volati_trans;actnup" 

            outFile_c_npool   "Catchment_Nitrogen_Pool.csv"
            attrSet_c_npool   "sNO3_Pool;sNH4_Pool;sNResiduePool;BioNAct;sN_activ_pool"

            outFile_c_crop   "Catchment_Crop_Growth.csv"
            attrSet_c_crop   "BioNAct;zrootd;BioAct;FPHUact;nstrs;wstrs;tstrs;nmin;NYield;BioYield;Addresidue_pooln;Addresidue_pool;cropid;gift;"

            //idSet_hru      "435"
        
            // simulation time
            startTime      "2000-01-01"
            endTime        "2010-05-30"

            // lu management
            startReduction "2000-01-01"
            endReduction   "2010-05-30"
        }

      logging {
          // "StandardEntityReader" "INFO"
          // "StationReader" "INFO"
          // "AreaAggregator" "INFO"
          // "RainCorrectionRichter" "INFO"
          // "J2KSNDormancy"  "INFO"
        }
    }

     analysis(title:"Upper Gera 853sqkm") {

        def f = "%last/Catchment_HRU.csv"    // output file for all
        def fn = "%last/Catchment_Reach.csv"    
        def fnp = "%last/Catchment_Nitrogen_Pool.csv"
        def fcg = "%last/Catchment_Crop_Growth.csv"


        timeseries(title:"Runoff") {
            x(file:f, column:"time")
            y(file:f, column:"catchmentSimRunoff")
        }
        timeseries(title:"Precip", view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"rain")
            y(file:f, column:"netRain")
            y(file:f, column:"snow")
        }
        timeseries(title:"Snow") {
            x(file:f, column:"time")
            y(file:f, column:"snowTotSWE")
            y(file:f, column:"snowMelt")
            y(file:f, column:"snowDepth")
        }
        timeseries(title:"ET", view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"potET")
            y(file:f, column:"actET")
            y(file:f, column:"rhum")
            y(file:f, column:"tmean")
        }
        timeseries(title:"Interception") {
            x(file:f, column:"time")
            y(file:f, column:"interception")
            y(file:f, column:"throughfall")
            y(file:f, column:"intercStorage")
        }
        timeseries(title:"Rad", view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"solRad")
            y(file:f, column:"netRad")
        }
        timeseries(title:"Soil" , view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"soilSatMPS")
            y(file:f, column:"soilSatLPS")
            y(file:f, column:"soilActMPS")
            y(file:f, column:"soilActLPS")
            y(file:f, column:"soilSat")
            y(file:f, column:"precip")
        }
      timeseries(title:"runoff components", view:COMBINED) {
            x(file:f, column:"time")
            y(file:f, column:"catchmentRD1_w")
            y(file:f, column:"catchmentRD2_w")
            y(file:f, column:"catchmentRG1_w")
            y(file:f, column:"catchmentRG2_w")
        }
        timeseries(title:"RD/RG", view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"catchmentRD1_w")
            y(file:f, column:"catchmentRD2_w")
            y(file:f, column:"catchmentRG1_w")
            y(file:f, column:"catchmentRG2_w")
            y(file:f, column:"percolation")
        }
        timeseries(title:"act RD/RG", view:STACKED) {
            x(file:f, column:"time")
            y(file:f, column:"actRG1")
            y(file:f, column:"actRG2")
        }

        timeseries(title:"N Pools" , view:STACKED) {
            x(file:fnp, column:"time")
            y(file:fnp, column:"sNO3_Pool")
            y(file:fnp, column:"sNH4_Pool")
            y(file:fnp, column:"sNResiduePool")
        }
        
 //       timeseries(title:"N concentration outlet" , view:STACKED) {
 //           x(file:f, column:"time")
 //           y(file:f, column:"catchmentSimNconc")
 //       }

        timeseries(title:"Biomass" , view:STACKED) {
            x(file:fcg, column:"time")
            y(file:fcg, column:"BioAct")
            y(file:fcg, column:"BioNAct")
            y(file:fcg, column:"FPHUact")
        }
        timeseries(title:"Stress" , view:STACKED) {
            x(file:fcg, column:"time")
            y(file:fcg, column:"nstrs")
            y(file:fcg, column:"wstrs")
            y(file:fcg, column:"tstrs")
        }
        timeseries(title:"Erosion" , view:STACKED) {
          x(file:f, column:"time")
          y(file:f, column:"gensed")
          y(file:f, column:"outsed")
          y(file:f, column:"catchmentSed")
          y(file:f, column:"rain")
      }

     }
}
