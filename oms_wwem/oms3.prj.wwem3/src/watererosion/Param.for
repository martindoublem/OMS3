      SUBROUTINE PARAM(QIN,QOUT,QOSTAR,QSHEAR,QSOUT,A,B,AVGSLP,
     1    WIDTH,RSPACE,KTRATO,SHRSOL,TCEND,FRCSOL,FRCTRL,RRC,NPART,FRAC,
     1    DIA,SPG,FALL,RUNOFF,EFFDRN,EFFINT,EFFDRR,STRLDN,TCF1,FIDEL,
     1    EATA,TAUC,THETA,PHI,SLPEND,AINF,BINF,CINF,AINFTC,BINFTC,
     1    CINFTC,SAND,SLPLEN,KIADJ,KRADJ,SHCRTADJ,NSLPTS,ROLGTH,
     1    KTRPRV, SHRSPV, TCPREV, WIDPRV,
     1    ANFLST, BNFLST, CNFLST, ATCLST, BTCLST, CTCLST)
      
      
    USE, INTRINSIC :: ISO_C_BINDING
    IMPLICIT NONE
    
    

C
C     SUBROUTINE PARAM FINDS DIMENSIONLESS RILL AND INTERRILL
C     SOIL EROSION PARAMETERS: ONE FOR INTERRILL EROSION (THETA),
C     TWO FOR RILL EROSION (EATA AND TAUC), AND ONE FOR DEPOSITION (PHI)
C     PARAM CALLS FUNCTIONS SHEARS AND FALVEL, AND SUBROUTINE TRCOEF
C
C     MODULE ADAPTED FROM WEPP VERSION 2004.7 AND CALLED FROM THE
C     MAIN PROGRAM
C
C     AUTHOR(S): D.C. FLANAGAN AND J.C. ASCOUGH II
C     DATE LAST MODIFIED: 4-1-2005
C
C     + + + PARAMETER DECLARATIONS + + +
C
      INTEGER MXPART, MXNSL, MXSLP, I, K, iclass
      PARAMETER (MXPART = 10,MXNSL = 1,MXSLP = 40)
C
C     + + + ARGUMENT DECLARATIONS + + +
C
      REAL*8 QIN, QOUT, QOSTAR, QSOUT, A(MXSLP), B(MXSLP), AVGSLP,
     1     WIDTH, RSPACE, KTRATO, SHRSOL, TCEND, FRCSOL, FRCTRL, RRC,
     1     FRAC(MXPART), DIA(MXPART), SPG(MXPART), FALL(MXPART),
     1     RUNOFF, EFFDRN, EFFINT, EFFDRR, STRLDN, EATA, TAUC,
     1     PHI, TCF1(MXPART), THETA, FIDEL(MXPART), SLPEND,
     1     AINF(MXSLP), BINF(MXSLP), CINF(MXSLP), AINFTC(MXSLP),
     1     BINFTC(MXSLP), CINFTC(MXSLP), SAND(MXNSL), SLPLEN, TCRATI,
     1     KIADJ, KRADJ, SHCRTADJ, ROLGTH, QSHEAR, TRCOEF, SHRATI, PKRO
      INTEGER NPART, NSLPTS
C
C     + + + ARGUMENT DEFINITIONS + + +
C
C
C     + + + LOCAL VARIABLES + + +
C
C     SAVE ANFLST, BNFLST, CNFLST, ATCLST, BTCLST, CTCLST
C
      REAL*8 KT, KT2, SHREND, DETINR, DIAEFF, SPGEFF, SUMF, VELEFF,BETA,
     1    KTRPRV, TCPREV, ANFLST, BNFLST, CNFLST, ATCLST, BTCLST,SHRDUM,
     1    CTCLST, STERM1, STERM2, SPART1, TPART1, TTERM1, TTERM2, TPROD,
     1    DENOM, SHRSPV, QI, RIF, INTDR, DRINTI(MXPART), AZ, BZ, WIDPRV

      real*8 shears, falvel
C
C     + + + LOCAL VARIABLE DEFINITIONS  + + +
C
C     DRINTI - UNITLESS INTERRILL DELIVERY RATIO OF EACH PARTICLE SIZE
C              CLASS (COMPUTED AS FUNCTION OF RIF)
C     INTDR  - UNITLESS WEIGHTED INTERRILL SEDIMENT DELIVERY RATIO
C     KT2    - TRANSPORT COEFFICIENT CALCULATED USING THE AVERAGE
C              OF SHREND AND SHRSOL
C     NPART  - NUMBER OF PARTICLE TYPES TO USE IN CALCULATING
C              EFFECTIVE PARTICLE PARAMETERS
C     SHREND - SHEAR STRESS CALCULATED USING ACTUAL SLOPE AT END
C              OF OFE
C     SHRSOL - SHEAR STRESS CALCULATED USING AVERAGE SLOPE OF OFE
C     DETINR - INTERRILL DETCHMENT RATE
C     DIAEFF - EFFECTIVE SEDIMENT DIAMETER
C     FALL   - FALL VELOCITY OF EACH PARTICLE SIZE OF EACH OFE (M/S)
C     SPGEFF - EFFECTIVE SEDIMENT SPECIFIC GRAVITY
C     SUMF   - SUM OF THE MASS FRACTIONS OF NPART FRACTIONS
C     VELEFF - EFFECTIVE PARTICLE FULL VELOCITY
C     BETA   - RAINFALL INDUCED TURBULENCE FACTOR
C     PKRO   - SLOPE OF THE FLOW DISCHARGE LINE.  FOR 1-OFE HILLS
C              PKRO IS THE FLOW DISCHARGE PER UNIT WIDTH
C     QI     - AVERAGE UNIT DISCHARGE OF RUNOFF FROM INTERRILL
C              OVER TIME OF EXCESS RAINFALL
C     RIF    - INTERRILL ROUGHNESS FACTOR FOR CALCULATING SEDIMENT
C              DELIVERY (FROM FOSTER, 1981 MODELING CHAPTER)
C
C     BEGIN SUBROUTINE PARAM
C
C     COMPUTE ACTUAL SLOPE GRADIENT AT THE END OF SLOPE (SLPEND)
C
C     CASE OF POSITIVE OUTFLOW
C
      IF (QOUT.GT.0.0d0) SLPEND = (A(NSLPTS)*1.0d0 + B(NSLPTS)) * AVGSLP

C
C     CASE OF NO OUTFLOW FROM PLANE
C
      IF (QOUT.LE.0.0d0) SLPEND = B(2) * AVGSLP
C
C     OBTAIN VARIABLES NEEDED FOR MAKING SHEAR STRESS AND TRANSPORT
C     CAPACITY CONTINUOUS AT FLOW PLANE BREAKS
C
C      IF (QIN.GT.0.0 .AND. QOUT.GT.0.0) THEN
C        KTRPRV = KTRATO
C        SHRSPV = SHRSOL * (FRCSOL(IPLANE)/FRCTRL(IPLANE)) * (
C    1       FRCTRL(IPLANE-1)/FRCSOL(IPLANE-1))
C        TCPREV = TCEND * ((FRCSOL(IPLANE)/FRCTRL(IPLANE))*(
C    1       FRCTRL(IPLANE-1)/FRCSOL(IPLANE-1))) ** 1.5
C  DCF - NOT EXACTLY SURE HOW BEST TO HANDLE THIS - FOR NOW
C        EXPECT TO READ IN FROM AN INPUT FILE THE VALUES FOR
C        KTRPV, SHRSPV, AND TCPREV     -  DCF  4/1/2005
c         READ(7,*) KTRPRV, SHRSPV, TCPREV, WIDPRV
c         READ(7,*) ANFLST, BNFLST, CNFLST, ATCLST, BTCLST, CTCLST
C      END IF
C
C     COMPUTE SHEAR STRESS AT THE END OF SLOPE (SHREND) USING ACTUAL
C     SLOPE GRADIENT
C
      SHREND = SHEARS(QSHEAR,SLPEND,RSPACE,WIDTH,FRCSOL,FRCTRL)
      IF (SHREND.LT.0.000001d0) SHREND = 0.000001d0
C
C     COMPUTE SHEAR STRESS AT THE END OF THE SLOPE (SHRSOL) USING
C     AVERAGE SLOPE GRADIENT (AVGSLP)
C
      SHRSOL = SHEARS(QSHEAR,AVGSLP,RSPACE,WIDTH,FRCSOL,FRCTRL)
C
      IF (SHRSOL.LT.0.000001d0) SHRSOL = 0.000001d0
C
C     COMPUTE THE TRANSPORT COEFFICIENT (KT) BASED ON THE AVERAGE SLOPE
C     FOR THE PURPOSE OF NORMALIZING
C
      CALL TRCOEFF(TRCOEF,SHRSOL,SAND,DIA,SPG,TCF1,NPART,FRAC)
C
      KT = TRCOEF
C
C     COMPUTE TRANSPORT COEFFICIENT (KT2) USING THE AVERAGE OF
C     SHREND AND SHRSOL
C
      SHRDUM = (SHREND+SHRSOL) / 2.0d0
      CALL TRCOEFF(TRCOEF,SHRDUM,SAND,DIA,SPG,TCF1,NPART,FRAC)
C
      KT2 = TRCOEF
C
C     COMPUTE THE NORMALIZED TRANSPORT COEFFICIENT (KTRATO)
C
      KTRATO = KT2 / KT
C
C     COMPUTE SEDIMENT TRANSPORT CAPACITY (TCEND) AT END OF AVERAGE
C     SLOPE
C
      TCEND = KT * SHRSOL ** 1.5d0
C
C     LIMIT TCEND SO THAT IT IS A VERY SMALL NUMBER, BUT NEVER 0.0 SO
C     THAT THE CODE WILL NOT BOMB FOR INPUTS OF ZERO SLOPES
C
      IF (TCEND.LT.1.0d-10) TCEND = 1.0d-10
C
C     COMPUTE THE STARTING NONDIMENSIONAL SEDIMENT LOAD AT THE TOP OF
C     THE CURRENT FLOW PLANE
C
C DCF  ADD CHECK FOR QIN FOR OMS CODE  2-21-2006
      IF(QIN.LE.0.0)THEN
         STRLDN = 0.0d0
         QSOUT = 0.0d0
      ELSE
         STRLDN = QSOUT * RSPACE / TCEND / WIDTH
      ENDIF
C
C
C     COMPUTE NEW VALUES OF SHEAR STRESS (AINF,BINF,CINF) COEFFICIENTS
C     AND NEW VALUES OF TRANSPORT COEFFICIENTS (AINFTC,BINFTC,CINFTC)
C     THAT MAKE SHEAR STRESS AND TRANSPORT CAPACITY FUNCTIONS
C     CONTINUOUS ON ADJACENT PLANES
C
      IF (QOUT.GT.0.0d0.AND.QIN.GT.0.0d0) THEN
C
C        ADD AN ADDITIONAL CORRECTION TO SHSPRV AND TCPREV TO ACCOUNT
C        FOR WIDTH DISCONTINUITIES AT THE PLANE BREAKS
C
C        ASSUME THAT FLOW ACROSS THE SECTIONAL AREA REMAINS THE SAME
C        WHEN GOING FROM AN UPPER TO A LOWER PLANE; HOWEVER, THE
C        CHANNEL WIDTH ABRUPTLY CHANGES
C
C        THIS IS NOT THE BEST SOLUTION, BUT IT IS THE EASIEST TO
C        IMPLEMENT HERE - THE BEST SOLUTION IS TO FORCE WIDTH TO ALSO
C        BE A CONTINUOUS FUNCTION, BUT THIS MESSES UP ALL OF THE
C        REDIMENSIONALIZATION AND IS A PROBLEM WHEN FLOW WIDTH EXPANDS
C        DUE TO NONHOMOGENEOUS PLANES - NEED TO CONTINUE WORK IN THIS
C        AREA
C
         SHRSPV = SHRSPV * (WIDPRV / WIDTH)
C
         TCPREV = TCPREV * (WIDPRV / WIDTH) ** 1.5d0
C
C        CHECK TO SEE THAT THE SHEAR STRESS AT THE END OF THE PREVIOUS
C        OFE WAS NOT ZERO - IF IT IS ZERO THE SOLUTIONS FOR THE NEW
C        SHEAR STRESS AND TRANSPORT COEFFICIENTS ARE NOT VALID AND MUST
C        USE ORIGINAL VALUES CALCULATED IN XINFLO.FOR
C
         SPART1 = ANFLST + BNFLST + CNFLST
C
         IF (SPART1.GT.1.0d-5.AND.SHRSPV.GT.0.0d0) THEN
            STERM1 = B(2) / SPART1
            STERM2 = (SHRSPV/SHRSOL) ** 1.5d0
            SHRATI = 1.0d0 / ((STERM1/STERM2)-1.0d0)
            TPART1 = ATCLST + BTCLST + CTCLST
C
            IF (TPART1.GT.1.0d-5) THEN
               TTERM1 = B(2) / TPART1
            ELSE
               TTERM1 = B(2) / 1.0d-5
            END IF
C
            TTERM2 = ((TCEND/TCPREV)*(KTRATO/KTRPRV))
            TPROD = (TTERM1*TTERM2) - 1.0d0
C
            IF (ABS(TPROD).GT.1.0d-5) THEN
               TCRATI = 1.0d0 / TPROD
            ELSE
               IF (TPROD.GE.0.0d0) THEN
                  TCRATI = 1.0d0 / 1.0d-5
               ELSE
                  TCRATI = -1.0d0 / 1.0d-5
               END IF
            END IF
C
C        ELSE  -  HAVE ZERO TRANSPORT CAPACITY AT BEGINNING OF OFE
C        DUE TO A ZERO SLOPE CONDITION - IF THIS IS THE CASE THE BEST
C        SOLUTION IS TO USE QOSTAR IN PLACE OF SHRATI AND TCRATI
C        SINCE IT WILL USUALLY STILL HAVE A REASONABLE NUMBER - AND
C        WHEN YOU HAVE A ZERO SLOPE AT AN OFE BOUNDARY THE SHEAR
C        AND TRANSPORT WILL STILL BE CONTINUOUS EVEN WHEN USING
C        QOSTAR
C
         ELSE
            SHRATI = QOSTAR
            TCRATI = QOSTAR
         END IF
C
C        RE-CALCULATE THE SHEAR STRESS AND TRANSPORT COEFFICIENTS
C        USING THE JUST CALCULATED SHEAR STRESS AND TRANSPORT RATIOS
C
         DO I = 2, NSLPTS
C
            DENOM = (SHRATI+1.0d0)
C
C           PREVENT THE DENOMINATOR TERM FOR THE COEFFICIENTS FROM
C           BECOMING ZERO, WHICH WILL CAUSE CODE TO BOMB IN
C           FOLLOWING COMPUTATIONS
C
            IF (ABS(DENOM).LT.1.0d-3) THEN
               IF (DENOM.GE.0.0d0) THEN
                  DENOM = 0.001d0
               ELSE
                  DENOM = -0.001d0
               END IF
            END IF
C
            AINF(I) = A(I) / DENOM
            BINF(I) = (A(I)*SHRATI+B(I)) / DENOM
            CINF(I) = (B(I)*SHRATI/DENOM)
C
            DENOM = (TCRATI+1.0)
C
C           PREVENT THE DENOMINATOR TERM FOR THE COEFFICIENTS FROM
C           BECOMING ZERO, WHICH WILL CAUSE THE CODE TO BOMB IN
C           FOLLOWING COMPUTATIONS
C
            IF (ABS(DENOM).LT.1.0d-3) THEN
               IF (DENOM.GE.0.0d0) THEN
                  DENOM = 0.001d0
               ELSE
                  DENOM = -0.001d0
               END IF
            END IF
C
            AINFTC(I) = A(I) / DENOM
            BINFTC(I) = (A(I)*TCRATI+B(I)) / DENOM
            CINFTC(I) = (B(I)*TCRATI/DENOM)
C
            ANFLST = AINF(I)
            BNFLST = BINF(I)
            CNFLST = CINF(I)
C
            ATCLST = AINFTC(I)
            BTCLST = BINFTC(I)
            CTCLST = CINFTC(I)
C
         END DO
C
      END IF
C
      IF (QIN.LE.0.0d0) THEN
         DO I = 2, NSLPTS
            ANFLST = AINF(I)
            BNFLST = BINF(I)
            CNFLST = CINF(I)
C
            ATCLST = AINF(I)
            BTCLST = BINF(I)
            CTCLST = CINF(I)
         END DO
      END IF
C
C     COMPUTE DIMENSIONLESS PARAMETERS FOR RILL EROSION (EATA AND TAUC)
C
C     SOIL IS FROZEN TO THE SURFACE
C
C     IF (FRDP(IPLANE).GT.0.0.AND.THDP(IPLANE).LE.0.0) THEN
C     EATA = 0.0
C
C     SURFACE SOIL IS UNFROZEN
C
C     ELSE
C
C     CHANGED EQUATION FOR RILL PARAMETER EATA SO THAT KT PARAMETER
C     IS NOT USED HERE (ONLY TCEND IS USED)
C
C     EATA = CNTLEN(IPLANE) * KR(IPLANE) * KRADJF(IPLANE) * SHRSOL
C     1         / TCEND
      EATA = SLPLEN * KRADJ * SHRSOL / TCEND
C     END IF
C
      TAUC = SHCRTADJ / SHRSOL
C
C     IF(LANUSE(IPLANE).EQ.1)THEN
C
C     FOR CROPLAND SITUATIONS ONLY, COMPUTE THE INTERRILL DELIVERY
C     RATIO AS FUNCTION OF RANDOM ROUGHNESS AND PARTICLE SIZE
C     DISTRIBUTION
C
      RIF = -23.0d0 * RRC + 1.14d0
C
      IF (RIF.LT.0.0d0) RIF = 0.0d0
      IF (RIF.GT.1.0d0) RIF = 1.0d0
C
      INTDR = 0.0d0
C
      DO ICLASS = 1, NPART
         IF (FALL(ICLASS).LT.0.01d0) THEN
            BZ = 0.1286d0 + 2209.0d0 * FALL(ICLASS)
            AZ = EXP(0.0672d0+659.0d0*FALL(ICLASS))
            DRINTI(ICLASS) = AZ * RIF ** BZ
         ELSE
            DRINTI(ICLASS) = 2.5d0 * RIF - 1.5d0
         END IF
         IF (DRINTI(ICLASS).GT.1.0d0) DRINTI(ICLASS) = 1.0d0
         IF (DRINTI(ICLASS).LT.0.0d0) DRINTI(ICLASS) = 0.0d0
         INTDR = INTDR + FRAC(ICLASS) * DRINTI(ICLASS)
      END DO
C
      DO ICLASS = 1, NPART
C
C        ADDED CHECK TO PREVENT A DIVIDE BY ZERO IF NO DELIVERY OF
C        INTERRILL SEDIMENT
C
C        THIS PROBLEM HAS BEEN ENHANCED DUE TO THE NEW EQUATION
C        ADDED ABOVE TO COMPUTE RIF (NOW, FOR AN "RRC" VALUE OF
C        0.05 METERS (2 INCHES) OR GREATER, THE VALUE OF RIF IS
C        ALWAYS ZERO, CAUSING A BOMB HERE)
C
         IF (INTDR.GT.0.0) THEN
            FIDEL(ICLASS) = FRAC(ICLASS) * DRINTI(ICLASS) / INTDR
         ELSE
            FIDEL(ICLASS) = 0.0d0
         END IF
      END DO
C
C     ELSE
C
C     NON-CROPLAND SITUATION: DO NOT DO INTERRILL SEDIMENT
C     DELIVERY CALCULATIONS
C
C     INTDR=1.0
C
C     DO ICLASS=1,NPART
C     FIDEL(ICLASS)=FRAC(ICLASS,IPLANE)
C     END DO
C
C     ENDIF
C
C     COMPUTE DIMENSIONLESS INTERRILL EROSION PARAMETER (THETA)
C
      print*,'erosion stuff: ',effdrr,effint
c
      IF (EFFDRR.GT.0.0d0) THEN
         QI = RUNOFF / EFFDRR
      ELSE
         QI = 0.0d0
      END IF
C
C     CODE TO INCORPORATE A NOZZLE IMPACT ENERGY FACTOR ADDED BELOW
C
C     ON PLANES WHICH HAVE A POSITIVE VALUE FOR SPRINKLER IRRIGATION
C     DEPTH, USE THE INPUT VALUE FOR NOZZLE IMPACT ENERGY FOR THAT
C     PLANE
C
C     WHEN THERE IS NO IRRIGATION WATER APPLIED, USE THE VALUE OF 1.0
C     FOR NOZZLE IMPACT ENERGY FACTOR (NATURAL RAINFALL)
C
      IF (WIDTH.GT.0.0d0) THEN
C
C        NO IRRIGATION DEPTH TODAY
C
C        IF(IRDEPT(IPLANE).LE.0.0)THEN
         DETINR = KIADJ * EFFINT * QI * INTDR * RSPACE / WIDTH

C
C     ELSE IF SPRINKLER IRRIGATION (IRSYST = 1)
C
C     ELSE IF(IRSYST.EQ.1)THEN
C
C     RATIO OF RAIN TO IRRIGATION DEPTH IS LESS THAN 1.0 - USE
C     THE INPUT VALUE OF NOZZLE IMPACT ENERGY
C
C     IF( (RAIN(IPLANE) /IRDEPT(IPLANE)) .LT. 1.0)THEN
C     DETINR = KI(IPLANE) * KIADJF(IPLANE) * EFFINT(IPLANE)
C     1                * QI * NOZZLE(IPLANE) * INTDR * RSPACE(IPLANE) /
C     1                WIDTH(IPLANE)
C
C     RATIO OF RAIN TO IRRIGATION DEPTH IS 1.0 OR GREATER -
C     USE THE ASSUMED IMPACT ENERGY FACTOR FOR NATURAL
C     RAINFALL (NOZZLE = 1.0)
C
C     ELSE
C     DETINR = KI(IPLANE) * KIADJF(IPLANE) * EFFINT(IPLANE) *
C     1            QI * INTDR * RSPACE(IPLANE) / WIDTH(IPLANE)
C     ENDIF
C
C     ELSE FURROW IRRIGATION WHICH SHOULD NOT HAVE ANY
C     INTERRILL DETACHMENT - SET DETINR TO 0.0
C
C     ELSE
C     DETINR = 0.0
C     ENDIF
C
C     ELSE THE RILL WIDTH IS ZERO (WHICH IS IMPOSSIBLE FOR A RUNOFF
C     SITUATION) SO SET THE VALUE FOR DETINR TO ZERO
C
      ELSE
         DETINR = 0.0d0
      END IF
C
C     THETA SET TO ZERO IF THE PLANE IS COVERED BY SNOW OR THE SURFACE
C     LAYER IS FROZEN OR THERE IS NO RAINFALL OR SPRINKLER IRRIGATION
C
C     IF (SNODPY(IPLANE).GT.0.0.OR.(FRARA.LE.0.8.AND.WMELT(IPLANE).GT.
C     1   0.0.AND.IRDEPT(IPLANE).LE.0.).OR.(RAIN(IPLANE).LE.0.0.AND.
C     1   IRDEPT(IPLANE).GT.0.0.AND.IRSYST.EQ.2)) THEN
C
C     THETA = 0.0
C     ELSE
C
      THETA = SLPLEN * DETINR / TCEND

      IF (QOUT.LE.QIN) THEN
C       FOR PLANES WITH NO RAINFALL EXCESS, SET INTERRILL DETACHMENT
C       PARAMETER TO 0.0
        THETA = 0.0d0
      ELSE
C       TIME CORRECTION FOR INTERRILL DETACHMENT
        THETA = THETA * (EFFDRR/EFFDRN)
      ENDIF
C
C     COMPUTE THE EFFECTIVE PARTICLE DIAMETER (DIAEFF), EFFECTIVE
C     SPECIFIC GRAVITY (SPGEFF), AND EFFECTIVE PARTICLE FALL
C     VELOCITY (VELEFF) USING THREE SIZE CLASSES (PRIMARY CLAY,
C     SILT AND SAND)
C
      DIAEFF = 0.0d0
      SPGEFF = 0.0d0
      SUMF = 0.0d0
C
C     NEEDS TO BE CORRECTIONS MADE HERE TO COMPUTE THE EFFECTIVE
C     DIAMETER, SPECIFIC GRAVITY, AND FALL VELOCITY
C
C     NEED TO ADDRESS WHEN THERE ARE LARGE AMOUNTS OF LARGE
C     AGGREGATES OR SAND PRESENT
C
C     CURRENTLY USING ONLY SMALLEST THREE SIZE CLASSES (CLAY, SILT,
C     SMALL AGGREGATES)
C
      DO K = 1, 3
         DIAEFF = DIAEFF + FRAC(K) * LOG(DIA(K))
         SPGEFF = SPGEFF + FRAC(K) * LOG(SPG(K))
         SUMF = SUMF + FRAC(K)
      END DO
C
      IF (SUMF.GT.0.0d0) THEN
         DIAEFF = EXP(DIAEFF/SUMF)
         SPGEFF = EXP(SPGEFF/SUMF)
         VELEFF = FALVEL(SPGEFF,DIAEFF)
C
C        COMPUTE DIMENSIONLESS DEPOSITION PARAMETER (PHI)
C
C        NOTE: THE TURBULENCE FACTOR BETA IS SET TO 0.5 FOR THE MOMENT
C        IF THERE IS RAINFALL; BETA IS SET TO ZERO IF NO RAINFALL
C
C        IF (RAIN(IPLANE).LE.0.0.AND.IRDEPT(IPLANE).LE.0.00001) THEN
C        BETA = 1.0
C        ELSE
         BETA = 0.5d0
C     END IF
C
      END IF
C
C     COMPUTE THE SLOPE OF THE FLOW DISCHARGE LINE (PKRO)
C
      PKRO = -1.0d-10
C
      IF (QOUT.GT.0.0d0) THEN
         PKRO = (QOUT-QIN) / SLPLEN
      ELSE
         IF (QIN.GT.0.0d0) THEN
            IF (ROLGTH.GT.1.0d-10) THEN
               PKRO = -QIN / ROLGTH
            ELSE
               PKRO = -1.0d-10
            END IF
         END IF
      END IF
C
      IF (ABS(PKRO).GE.1.0d-15) THEN
         PHI = BETA * VELEFF / PKRO
      ELSE
C
C        SET MAXIMUM VALUE OF DEPOSITION PARAMETER TO +-100000
C        IF SLOPE OF FLOW DISCHARGE LINE IS ALMOST 0.0
C
         IF (QOSTAR.GE.0.0d0) THEN
            PHI = 100000.0d0
         ELSE
            PHI = -100000.0d0
         END IF
      END IF
C
C     LIMIT VALUE OF DEPOSITION PARAMETER TO ABSOLUTE VALUE OF 100000
C
      IF (PHI.GT.100000.0d0) PHI = 100000.0d0
      IF (PHI.LT.-100000.0d0) PHI = -100000.0d0

C
      RETURN
      END
